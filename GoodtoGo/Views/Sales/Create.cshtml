@model GoodtoGo.Models.Sale

@{
	ViewBag.Title = "Create";
}
<script>
	var salesItem = {
		ProductID: "",
		Quantity: "",
		Price:""
	};

	var sale =
	{
		date:"",
		total: "",
		salesItem:[]
	};

	$(document).ready(function () {	
		$("#AddItem").bind("click", function () {
			$("#SaleProductTableBody").append(GetEnrollmentRow(-1));
			$("#SaleProduct tr:last td:first").append($("#ProductList").clone());;
			$('#SaleProduct tr:last #ProductList').change(function () {
				ChangePrice(this);
			});
			$('#SaleProduct tr:last #Quantity').val(0);
			$('#SaleProduct tr:last #Quantity').keyup(function () {
				getTotal(this);
			});
			
		});
	});
	$(document).ready(function () {
		debugger;
		$('#AddSale').click(function () {
			sale = Object.create(sale);
			sale.date = $('#Date').val();
			sale.total = $('#Total').val();
			sale.salesItem = [];
			$('#SaleProductTableBody tr').each(function () {
				salesItem = Object.create(salesItem);
				salesItem.ProductID = $(this).find('#ProductList').val();
				salesItem.Price = $(this).find('#Amount').text();
				salesItem.Quantity = $(this).find('#Quantity').val();
				sale.salesItem.push(salesItem);
			});
			var obj = JSON.stringify(sale);
			$.ajax({
				contentType: 'application/json; charset=utf-8',
				dataType: 'json',
				type: 'POST',
				url: '/Sales/ADD',
				data: "{std:" + obj + "}",
				success: function (flag) {
					if (flag == 1) {
						location.href = '@Url.Action("Index", "Sales")';
					}
					else {
						var jsonOb=@Html.Raw(Json.Encode(ViewBag.Error));
						alert(jsonOb[0]);
					}
				}
			});
		});
	});
	function getTotal(Quantity) {
		tr = Quantity.closest("tr");
		var qty = $(Quantity).val();
		$("td[id='Amount']", tr).html(parseInt(qty * $("input[id='SalePrice']", tr).val()));
		SalesTotal();
	}
	function ChangePrice(Select) {
		tr = Select.closest("tr");
		var PId = $(Select).val();
		$.get('@Url.Action("GetItemPrice", "Products")',
            { ProductID: PId }, function (data) {
            	$("td[id='PurchasePrice']", tr).html(parseInt(data));
            	$("input[id='SalePrice']", tr).val(parseInt(data));
            });
	}
	function SalesTotal() {
		var total = 0;
		$("#SaleProductTableBody tr").each(function () {
			total+=parseInt($(this).find('#Amount').text());
		});
		$('#Total').val(total);
	}
	function GetEnrollmentRow(value) {
		var html = ' <tr><td id="Products"></td><td id="PurchasePrice"></td><td><input id="Quantity" class="form-control"></td><td><input id="SalePrice" class="form-control"></td><td id=Amount></td><td><input type="button" class="btn btn-danger remove" value="Remove" onclick="DeleteRow(this);"></td></tr>';
		return html;
	}
	function DeleteRow(btndel) {
		if (typeof (btndel) == "object") {
			$(btndel).closest("tr").remove();
		}
		else {
			return false;
		}
	}
</script>

	

<div hidden>
	@Html.DropDownList("ProductList", null, htmlAttributes: new { @class = "form-control" })
</div>
<div class="row">
	<div class="col-sm-11">
		<div class="box box-primary">
			<div class="box-header">
				<h2>Create</h2>
			</div>
			<div class="box-body">

				<div class="form-horizontal">
					<h4>Sale</h4>
					<hr />
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					<div class="form-group">
						@Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control",@Value=@ViewBag.Date,@Readonly="Readonly" } })
							@Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>

			</div>
			<div class="box-footer">
				<button id="AddItem" class="btn btn-primary">Add Product</button>
			</div>
		</div>


		<div class="box box-primary">
			<div class="box-header with-border">
				<center><h3 class="box-title">Sales Detail</h3></center>
			</div>
			<div class="box-body">
				<div style="overflow-x:auto;">
					<table id="SaleProduct" class="table table-striped table-responsive table-hover table-bordered ">
						<thead>
							<tr>
								<th>
									Product Name
								</th>
								<th>
									Purchase Price
								</th>
								<th>
									Qunatity
								</th>
								<th>
									Sale Price
								</th>
								<th>
									Total
								</th>
							</tr>
						</thead>
						<tbody id="SaleProductTableBody"></tbody>
					</table>
				</div>
			</div>
			<div class="box-footer">
				<input id="AddSale" type="submit" value="Add Sales" class="btn btn-primary" />

			</div>
		</div>
	</div>
</div>
<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
